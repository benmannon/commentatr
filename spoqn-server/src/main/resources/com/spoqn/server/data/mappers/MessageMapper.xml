<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spoqn.server.data.mappers.MessageMapper">

  <parameterMap id="message" type="com.spoqn.server.data.Message">
    <parameter property="id" />
    <parameter property="created" />
    <parameter property="loginId" />
  </parameterMap>

  <resultMap id="message" type="com.spoqn.server.data.Message">
    <constructor>
      <idArg column="message_uuid" javaType="java.util.UUID" />
      <arg column="message_text" javaType="String" />
      <arg column="create_date" javaType="java.time.Instant" />
      <arg column="login_id" javaType="String" />
      <arg column="content_uuid" javaType="java.util.UUID" />
    </constructor>
  </resultMap>

  <sql id="selectAll">
    SELECT
      m.message_uuid
    , m.message_text
    , m.create_date
    , u.login_id
    , c.content_uuid
    FROM message m
    INNER JOIN user u ON m.user_id = u.user_id
    LEFT JOIN message_attachment m_att ON m.message_id = m_att.message_id
    LEFT JOIN content c ON m_att.content_id = c.content_id
    LEFT JOIN room r ON m.room_id = r.room_id
    LEFT JOIN message_recipient m_rec ON m.message_id = m_rec.message_id
    LEFT JOIN user rec ON m_rec.recipient_user_id = rec.user_id
    LEFT JOIN user_room u_r ON r.room_id = u_r.room_id
    LEFT JOIN user this_user ON u_r.user_id = this_user.user_id
    WHERE (this_user.login_id IS NULL OR this_user.login_id = #{loginId})
  </sql>

  <select id="findOne" resultMap="message">
    <include refid="selectAll" />
      AND message_uuid = #{id}
  </select>

  <select id="findBy" resultMap="message">
    <include refid="selectAll" />
    <if test="!params.rooms.isEmpty()">
      AND r.room_name IN
      <foreach item="room" collection="params.rooms" open="(" close=")" separator=",">
        #{room}
      </foreach>
    </if>
    <if test="!params.userIds.isEmpty()">
      AND u.user_uuid IN
      <foreach item="userId" collection="params.userIds" open="(" close=")" separator=",">
        #{userId}
      </foreach>
    </if>
    <if test="params.direct == true">
      AND rec.login_id IS NOT NULL
      AND rec.login_id = #{loginId}
        OR u.login_id = #{loginId}
    </if>
    <if test="params.direct != true">
      AND rec.login_id IS NULL
      AND u_r.is_active = 1
    </if>
    <if test="params.since != null">
      AND m.create_date <![CDATA[>=]]> #{params.since}
    </if>
    <if test="params.until != null">
      AND m.create_date <![CDATA[<=]]> #{params.until}
    </if>
    ORDER BY m.create_date
    <if test="params.top != null">
      LIMIT #{params.top}
    </if>
  </select>

  <insert id="create" parameterMap="message">
    INSERT message SET
      message_uuid = #{id}
    , user_id = (SELECT user_id FROM user WHERE login_id = #{loginId})
    , content_id = (SELECT content_id FROM content WHERE content_uuid = #{contentId})
    , create_date = UTC_TIMESTAMP()
  </insert>

  <insert id="createContent" parameterMap="message">
    INSERT content SET
      content_uuid = #{contentId}
    , mime_type = #{mimeType}
    , body = #{body}
  </insert>
</mapper>